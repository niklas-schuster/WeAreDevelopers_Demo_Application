name: Build & Publish MAIN

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "[Init] Checkout Repository"
      uses: actions/checkout@v3
    - name: Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: 1.23
      # You can test your matrix by printing the current Go version
    - name: Display Go version
      run: go version
    - name: "[Release] Determine Release Version"
      id: version
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: main
        
    - name: "[Release] Generate Changelog"
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ github.token }}
        output-file: "false"
        git-push: "false"
        skip-git-pull: "true"
        skip-version-file: "true"
        skip-commit: "true"
        
    - name: "[Build] Build Container Image with Buildah"
      id: build
      uses: redhat-actions/buildah-build@v2
      with:
        image: okp-crossplane-demo
        tags: ${{ steps.version.outputs.nextStrict }}
        containerfiles: |
          Dockerfile
          
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}  # GCP Project ID from GitHub Secrets
        service_account_key: ${{ secrets.GCP_SA_KEY }}  # GCP Service Account Key from GitHub Secrets
        export_default_credentials: true
        
    - name: Authenticate Docker with GCR
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | docker login -u _json_key --password-stdin https://gcr.io
 
        
    - name: "[AWS] Push Container Image to ECR with Podman"
      id: push
      uses: redhat-actions/push-to-registry@v2
      with:
        image: okp-crossplane-demo
        tags: ${{ steps.version.outputs.nextStrict }}
        registry: gcr.io/okp-crossplane-setup
        
    - name: "[AWS] Print Image URL/ECR destination"
      run: echo "Image pushed to ${{ steps.push.outputs.registry-paths }}"

    - name: "[GitHub] Create GitHub Release"
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.version.outputs.nextStrict }}
        release_name: Release ${{ steps.version.outputs.nextStrict }}
        prerelease: true
        body: ${{ steps.changelog.outputs.clean_changelog }}

    - name: "[GitHub] Print Release ID"
      run: echo "Release with ID ${{steps.release.outputs.id}} created"
