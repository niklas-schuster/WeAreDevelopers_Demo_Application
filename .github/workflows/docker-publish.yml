name: Build & Publish MAIN

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "[Init] Checkout Repository"
      uses: actions/checkout@v3
    - name: Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: 1.23
      # You can test your matrix by printing the current Go version
    - name: Display Go version
      run: go version
    - name: "[Release] Determine Release Version"
      id: version
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: main
        
    - name: "[Release] Generate Changelog"
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ github.token }}
        output-file: "false"
        git-push: "false"
        skip-git-pull: "true"
        skip-version-file: "true"
        skip-commit: "true"
        
    
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
      
    - name: Building and pushing the image
      uses: ./
        # uses: RafikFarhad/push-to-gcr-github-action@v5-rc1 # <- use this on your workflow
      with:
        gcloud_service_key: ${{ secrets.GCP_SA_KEY }} # <- not needed when used with google-github-actions/auth@v2
        registry: gcr.io
        project_id: okp-crossplane-setup
        image_name: okp-crossplane-demo
        image_tag: ${{ steps.version.outputs.nextStrict }}
        dockerfile: ./Dockerfile
        target: build   
        
    - name: "[AWS] Print Image URL/ECR destination"
      run: echo "Image pushed to ${{ steps.push.outputs.registry-paths }}"

    - name: "[GitHub] Create GitHub Release"
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.version.outputs.nextStrict }}
        release_name: Release ${{ steps.version.outputs.nextStrict }}
        prerelease: true
        body: ${{ steps.changelog.outputs.clean_changelog }}

    - name: "[GitHub] Print Release ID"
      run: echo "Release with ID ${{steps.release.outputs.id}} created"
